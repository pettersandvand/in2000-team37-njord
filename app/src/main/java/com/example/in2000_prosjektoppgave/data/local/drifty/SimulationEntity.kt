package com.example.in2000_prosjektoppgave.data.local.drifty

import androidx.room.Entity
import androidx.room.PrimaryKey
import com.example.in2000_prosjektoppgave.model.SimulationData


/**
 * Data class used by database for storage of simulation objects.
 *
 * @property id Primary key autogenerated.
 * @property name Display name of object.
 * @property nameAlias Object name used by server.
 * @property latitude List of latitude coordinates. Length depends on type property.
 * @property longitude List of latitude coordinates. Length depends on type property.
 * @property radius List of radius for points. Only used by Point and Cone type.
 * @property date List of dates for simulation.
 * @property time List of time instances for simulation.
 * @property simulationLength Length of simulation.
 * @property type Type of simulation. (Point, Polygon or Cone)
 * @property datePerformed Date the simulation was performed.
 * @property curDir Current direction.
 * @property curSpeed Current speed.
 * @property windDir Wind direction.
 * @property windSpeed Wind speed.
 * @property status Status on simulation completion. Where false = failed simulation,
 * true = success, null = simulation in progress.
 * @property path Path for NetCDF file associated with object.
 */
@Entity
data class SimulationEntity(

        @PrimaryKey(autoGenerate = true)
        var id: Int = 0,
        var name: String,
        var nameAlias: String,
        var latitude: List<Double>,
        var longitude: List<Double>,
        var radius: List<Int>,
        var date: List<String>,
        var time: List<String>,
        var simulationLength: Int,
        var type: String,
        var datePerformed: String,
        var curDir: Double? = null,
        var curSpeed: Double? = null,
        var windDir: Double? = null,
        var windSpeed: Double? = null,
        var status: Boolean? = null,
        var path: String? = null
) {

    /**
     * Function to map a simulation entity object to a domain model object.
     */
    fun toDomain() = SimulationData(
            name = name,
            nameAlias = nameAlias,
            latitude = latitude,
            longitude = longitude,
            radius = radius,
            date = date,
            time = time,
            simulationLength = simulationLength,
            type = type,
            datePerformed = datePerformed,
            curDir = curDir,
            curSpeed = curSpeed,
            windDir = windDir,
            windSpeed = windSpeed,
            status = status,
            path = path
    )

}